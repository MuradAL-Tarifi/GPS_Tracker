// <auto-generated />
using System;
using GPS.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GPS.DataAccess.Context.Migrations.initDB
{
    [DbContext(typeof(TrackerDBContext))]
    [Migration("20211207154943_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("GPS.Domain.Models.Agent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Agent");
                });

            modelBuilder.Entity("GPS.Domain.Models.Alert", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("AlertDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("AlertForValueAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlertForValueEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlertTextAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlertTextEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AlertTypeLookupId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("FleetId")
                        .HasColumnType("bigint");

                    b.Property<long?>("GeofenceId")
                        .HasColumnType("bigint");

                    b.Property<long?>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InventorySensorId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDismissed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Odometer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("VehicleId")
                        .HasColumnType("bigint");

                    b.Property<long?>("WarehouseId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Alert");
                });

            modelBuilder.Entity("GPS.Domain.Models.AlertGroupLookup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AlertGroupLookup");
                });

            modelBuilder.Entity("GPS.Domain.Models.AlertTypeLookup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AlertGroupLookupId")
                        .HasColumnType("int");

                    b.Property<string>("DataType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasMaxValue")
                        .HasColumnType("bit");

                    b.Property<bool>("HasMinValue")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRange")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RowOrder")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitEn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AlertTypeLookup");
                });

            modelBuilder.Entity("GPS.Domain.Models.CustomAlert", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<int>("AlertTypeLookupId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("FleetId")
                        .HasColumnType("bigint");

                    b.Property<long?>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<int>("Interval")
                        .HasColumnType("int");

                    b.Property<long?>("InventorySensorId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastAlertDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("MaxValue")
                        .HasColumnType("float");

                    b.Property<double?>("MinValue")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToEmails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("VehicleId")
                        .HasColumnType("bigint");

                    b.Property<long?>("WarehouseId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AlertTypeLookupId");

                    b.ToTable("CustomAlert");
                });

            modelBuilder.Entity("GPS.Domain.Models.DayOfWeekLookup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DayOfWeekLookup");
                });

            modelBuilder.Entity("GPS.Domain.Models.DeviceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DeviceType");
                });

            modelBuilder.Entity("GPS.Domain.Models.EmailHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("AlertId")
                        .HasColumnType("bigint");

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsSent")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToEmails")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmailHistory");
                });

            modelBuilder.Entity("GPS.Domain.Models.EventLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObjectId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObjectType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("EventLog");
                });

            modelBuilder.Entity("GPS.Domain.Models.Fleet", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<int>("AgentId")
                        .HasColumnType("int");

                    b.Property<string>("CommercialRegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ManagerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManagerMobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupervisorEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupervisorMobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxRegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.ToTable("Fleet");
                });

            modelBuilder.Entity("GPS.Domain.Models.FleetDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("ActivityType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommercialRecordIssueDateHijri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommercialRecordNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DateOfBirthHijri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtensionNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FleetId")
                        .HasColumnType("bigint");

                    b.Property<string>("FleetType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentityNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLinkedWithWasl")
                        .HasColumnType("bit");

                    b.Property<string>("ManagerMobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManagerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManagerPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferanceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SFDACompanyActivities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("FleetDetails");
                });

            modelBuilder.Entity("GPS.Domain.Models.Gateway", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("IMEI")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SIMNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Gateway");
                });

            modelBuilder.Entity("GPS.Domain.Models.Group", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<int>("AgentId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("FleetId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("GPS.Domain.Models.Inventory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("GatewayId")
                        .HasColumnType("bigint");

                    b.Property<string>("InventoryNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLinkedWithWasl")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SFDAStoringCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("WarehouseId")
                        .HasColumnType("bigint");

                    b.Property<string>("WaslActivityType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GatewayId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Inventory");
                });

            modelBuilder.Entity("GPS.Domain.Models.InventorySensor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("InventoryId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Serial")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InventoryId");

                    b.ToTable("InventorySensor");
                });

            modelBuilder.Entity("GPS.Domain.Models.OnlineHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<int>("AlertCode")
                        .HasColumnType("int");

                    b.Property<int>("Alitude")
                        .HasColumnType("int");

                    b.Property<long>("DevicesHistoryId")
                        .HasColumnType("bigint");

                    b.Property<int>("Direction")
                        .HasColumnType("int");

                    b.Property<int?>("Door1")
                        .HasColumnType("int");

                    b.Property<int?>("Door2")
                        .HasColumnType("int");

                    b.Property<DateTime>("GPSDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HDOP")
                        .HasColumnType("int");

                    b.Property<decimal?>("Humidity1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Humidity2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Humidity3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Humidity4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Ignition")
                        .HasColumnType("bit");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("NumberOfPassengers")
                        .HasColumnType("int");

                    b.Property<int>("Odometer")
                        .HasColumnType("int");

                    b.Property<int>("SatelliteCount")
                        .HasColumnType("int");

                    b.Property<bool?>("Seat")
                        .HasColumnType("bit");

                    b.Property<bool?>("Sos")
                        .HasColumnType("bit");

                    b.Property<bool?>("SosPassenger")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SosPassengerUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SosUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.Property<decimal?>("Temperature1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Temperature2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Temperature3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Temperature4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TotalWeight")
                        .HasColumnType("int");

                    b.Property<long>("VehicleId")
                        .HasColumnType("bigint");

                    b.Property<int?>("WeightVolt")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OnlineHistory");
                });

            modelBuilder.Entity("GPS.Domain.Models.OnlineInventoryHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Alram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GSMStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("GatewayIMEI")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("GpsDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Humidity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("IsLowVoltage")
                        .HasColumnType("bit");

                    b.Property<long>("Serial")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Temperature")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("OnlineInventoryHistory");
                });

            modelBuilder.Entity("GPS.Domain.Models.PrivilegeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Editable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PrivilegeType");
                });

            modelBuilder.Entity("GPS.Domain.Models.RegisterType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RegisterType");
                });

            modelBuilder.Entity("GPS.Domain.Models.ReportSchedule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<int?>("AlertTypeLookupId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Daily")
                        .HasColumnType("bit");

                    b.Property<int?>("DailyRepeat")
                        .HasColumnType("int");

                    b.Property<string>("DailyTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DayOfMonthId")
                        .HasColumnType("int");

                    b.Property<int?>("DayOfWeekId")
                        .HasColumnType("int");

                    b.Property<string>("Emails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Engine")
                        .HasColumnType("bit");

                    b.Property<bool?>("Excel")
                        .HasColumnType("bit");

                    b.Property<long>("FleetId")
                        .HasColumnType("bigint");

                    b.Property<long?>("GeofenceId")
                        .HasColumnType("bigint");

                    b.Property<long?>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<string>("GroupUpdatesByType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GroupUpdatesValue")
                        .HasColumnType("int");

                    b.Property<long?>("InventoryId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnglish")
                        .HasColumnType("bit");

                    b.Property<bool?>("Monthly")
                        .HasColumnType("bit");

                    b.Property<int?>("MonthlyRepeat")
                        .HasColumnType("int");

                    b.Property<string>("MonthlyTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("NewerToOlder")
                        .HasColumnType("bit");

                    b.Property<bool?>("PDF")
                        .HasColumnType("bit");

                    b.Property<int>("ReportTypeLookupId")
                        .HasColumnType("int");

                    b.Property<long?>("SensorSerial")
                        .HasColumnType("bigint");

                    b.Property<int?>("SpeedFrom")
                        .HasColumnType("int");

                    b.Property<int?>("SpeedTo")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("VehicleId")
                        .HasColumnType("bigint");

                    b.Property<long?>("WarehouseId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Weekly")
                        .HasColumnType("bit");

                    b.Property<int?>("WeeklyRepeat")
                        .HasColumnType("int");

                    b.Property<string>("WeeklyTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Yearly")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DayOfWeekId");

                    b.HasIndex("FleetId");

                    b.HasIndex("GroupId");

                    b.HasIndex("InventoryId");

                    b.HasIndex("ReportTypeLookupId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("ReportSchedule");
                });

            modelBuilder.Entity("GPS.Domain.Models.ReportScheduleHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DueDateTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("ReportScheduleId")
                        .HasColumnType("bigint");

                    b.Property<int>("ScheduleTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ReportScheduleHistory");
                });

            modelBuilder.Entity("GPS.Domain.Models.ReportTypeLookup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ReportTypeLookup");
                });

            modelBuilder.Entity("GPS.Domain.Models.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayNameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("GPS.Domain.Models.ScheduleTypeLookup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ScheduleTypeLookup");
                });

            modelBuilder.Entity("GPS.Domain.Models.SensorAlert", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<decimal?>("FromValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("InventorySensorId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSMS")
                        .HasColumnType("bit");

                    b.Property<int>("SensorAlertTypeLookupId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ToValue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("InventorySensorId");

                    b.HasIndex("SensorAlertTypeLookupId");

                    b.ToTable("SensorAlert");
                });

            modelBuilder.Entity("GPS.Domain.Models.SensorAlertTypeLookup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DataType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRange")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RowOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SensorAlertTypeLookup");
                });

            modelBuilder.Entity("GPS.Domain.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long?>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<int?>("AgentId")
                        .HasColumnType("int");

                    b.Property<string>("AppId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EnableMobileAlerts")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("FleetId")
                        .HasColumnType("bigint");

                    b.Property<long?>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.HasIndex("FleetId");

                    b.HasIndex("GroupId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("GPS.Domain.Models.UserPrivilege", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("PrivilegeTypeId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PrivilegeTypeId");

                    b.ToTable("UserPrivilege");
                });

            modelBuilder.Entity("GPS.Domain.Models.UserRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("GPS.Domain.Models.UserWarehouse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("WarehouseId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("WarehouseId");

                    b.ToTable("UserWarehouse");
                });

            modelBuilder.Entity("GPS.Domain.Models.Warehouse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FleetId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLinkedWithWasl")
                        .HasColumnType("bit");

                    b.Property<double>("LandAreaInSquareMeter")
                        .HasColumnType("float");

                    b.Property<string>("LandCoordinates")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LicenseExpiryDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicenseIssueDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicenseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ManagerMobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WaslActivityType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FleetId");

                    b.ToTable("Warehouse");
                });

            modelBuilder.Entity("GPS.Domain.Models.WaslCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessageAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessageEn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WaslCode");
                });

            modelBuilder.Entity("GPS.Domain.Models.WaslIntegrationLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<int>("HttpCode")
                        .HasColumnType("int");

                    b.Property<DateTime>("LogDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Request")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WaslIntegrationLog");
                });

            modelBuilder.Entity("GPS.Domain.Models.WaslIntegrationLogTypeLookup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WaslIntegrationLogTypeLookup");
                });

            modelBuilder.Entity("GPS.Domain.Models.CustomAlert", b =>
                {
                    b.HasOne("GPS.Domain.Models.AlertTypeLookup", "AlertTypeLookup")
                        .WithMany()
                        .HasForeignKey("AlertTypeLookupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AlertTypeLookup");
                });

            modelBuilder.Entity("GPS.Domain.Models.EventLog", b =>
                {
                    b.HasOne("GPS.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GPS.Domain.Models.Fleet", b =>
                {
                    b.HasOne("GPS.Domain.Models.Agent", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("GPS.Domain.Models.Group", b =>
                {
                    b.HasOne("GPS.Domain.Models.Agent", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("GPS.Domain.Models.Inventory", b =>
                {
                    b.HasOne("GPS.Domain.Models.Gateway", "Gateway")
                        .WithMany()
                        .HasForeignKey("GatewayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GPS.Domain.Models.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gateway");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("GPS.Domain.Models.InventorySensor", b =>
                {
                    b.HasOne("GPS.Domain.Models.Inventory", "Inventory")
                        .WithMany()
                        .HasForeignKey("InventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventory");
                });

            modelBuilder.Entity("GPS.Domain.Models.ReportSchedule", b =>
                {
                    b.HasOne("GPS.Domain.Models.DayOfWeekLookup", "DaysOfWeekLookup")
                        .WithMany()
                        .HasForeignKey("DayOfWeekId");

                    b.HasOne("GPS.Domain.Models.Fleet", "Fleet")
                        .WithMany()
                        .HasForeignKey("FleetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GPS.Domain.Models.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.HasOne("GPS.Domain.Models.Inventory", "Inventory")
                        .WithMany()
                        .HasForeignKey("InventoryId");

                    b.HasOne("GPS.Domain.Models.ReportTypeLookup", "ReportTypeLookup")
                        .WithMany()
                        .HasForeignKey("ReportTypeLookupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GPS.Domain.Models.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");

                    b.Navigation("DaysOfWeekLookup");

                    b.Navigation("Fleet");

                    b.Navigation("Group");

                    b.Navigation("Inventory");

                    b.Navigation("ReportTypeLookup");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("GPS.Domain.Models.SensorAlert", b =>
                {
                    b.HasOne("GPS.Domain.Models.InventorySensor", "InventorySensor")
                        .WithMany()
                        .HasForeignKey("InventorySensorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GPS.Domain.Models.SensorAlertTypeLookup", "SensorAlertTypeLookup")
                        .WithMany()
                        .HasForeignKey("SensorAlertTypeLookupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InventorySensor");

                    b.Navigation("SensorAlertTypeLookup");
                });

            modelBuilder.Entity("GPS.Domain.Models.User", b =>
                {
                    b.HasOne("GPS.Domain.Models.Agent", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentId");

                    b.HasOne("GPS.Domain.Models.Fleet", "Fleet")
                        .WithMany()
                        .HasForeignKey("FleetId");

                    b.HasOne("GPS.Domain.Models.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.Navigation("Agent");

                    b.Navigation("Fleet");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("GPS.Domain.Models.UserPrivilege", b =>
                {
                    b.HasOne("GPS.Domain.Models.PrivilegeType", "PrivilegeType")
                        .WithMany()
                        .HasForeignKey("PrivilegeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrivilegeType");
                });

            modelBuilder.Entity("GPS.Domain.Models.UserWarehouse", b =>
                {
                    b.HasOne("GPS.Domain.Models.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("GPS.Domain.Models.Warehouse", b =>
                {
                    b.HasOne("GPS.Domain.Models.Fleet", "Fleet")
                        .WithMany()
                        .HasForeignKey("FleetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fleet");
                });
#pragma warning restore 612, 618
        }
    }
}
